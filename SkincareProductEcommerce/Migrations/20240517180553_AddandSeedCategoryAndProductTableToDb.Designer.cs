// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkincareProductEcommerce.Data;

#nullable disable

namespace SkincareProductEcommerce.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240517180553_AddandSeedCategoryAndProductTableToDb")]
    partial class AddandSeedCategoryAndProductTableToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.3.24172.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SkincareProductEcommerce.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "History"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 3,
                            Name = "Sci-fi"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 2,
                            Name = "Action"
                        });
                });

            modelBuilder.Entity("SkincareProductEcommerce.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "A lightweight serum that hydrates and plumps skin",
                            ImageUrl = "",
                            Name = "Hydrating Serum",
                            Price = 25.0,
                            Size = "30ml"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Gentle cleanser for acne-prone skin",
                            ImageUrl = "",
                            Name = "Acne Cleanser ",
                            Price = 15.0,
                            Size = "150ml"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Brightening cream enriched with Vitamin C",
                            ImageUrl = "",
                            Name = "Vitamin C Cream",
                            Price = 30.0,
                            Size = "50ml"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Description = "Anti-aging serum with retinol",
                            ImageUrl = "",
                            Name = "Retinol Serum",
                            Price = 35.0,
                            Size = "50ml"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Description = "Broad-spectrum sunscreen with SPF",
                            ImageUrl = "",
                            Name = "SPF 50 Sunscreen",
                            Price = 20.0,
                            Size = "100ml"
                        });
                });

            modelBuilder.Entity("SkincareProductEcommerce.Models.Product", b =>
                {
                    b.HasOne("SkincareProductEcommerce.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
